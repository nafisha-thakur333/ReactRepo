● Is JSX mandatory for React?
No, JSX is not mandatory for React, but it is commonly used because it makes the code more readable and easier to write. 

● Is ES6 mandatory for React?
ES6 (ECMAScript 2015) is not mandatory for React, but it is highly recommended and commonly used. React itself is just a library that works with JavaScript, and you can technically use older versions of JavaScript (ES5) to write React code. 

● How can I write comments in JSX?
In JSX, you can write comments within your code using curly braces {} and the JavaScript comment syntax.

● What is <React.Fragment></React.Fragment> and <></> ?
<React.Fragment> is a built-in component that allows you to group a list of children without adding extra nodes to the DOM.The shorthand syntax <></> is a more concise way to write React.Fragment. It achieves the same result:

● What is Virtual DOM?
The Virtual DOM (VDOM) is a programming concept used in libraries like React to optimize and manage the performance of updating the user interface (UI). It is an abstraction of the actual DOM (Document Object Model), which represents the structure of a web page.

How the Virtual DOM Works :-

1)Initial Rendering: When a React component is first rendered, a virtual representation of the DOM is created in memory. This virtual DOM is a lightweight copy of the actual DOM.

2)State Changes: When the state of a component changes (e.g., due to user interaction or data updates), React creates a new virtual DOM to reflect these changes.

3)Diffing Algorithm: React compares the new virtual DOM with the previous virtual DOM using a diffing algorithm. This process identifies what has changed (e.g., which elements need to be updated, added, or removed).

4)Reconciliation: Based on the differences found, React updates the actual DOM. This step involves making the minimum number of changes necessary to bring the DOM into sync with the new virtual DOM.

5)Efficient Updates: By using the virtual DOM, React minimizes direct manipulation of the actual DOM, which can be slow and inefficient. Instead, changes are batched and optimized, leading to faster and smoother UI updates.

● What is Reconciliation in React?
Reconciliation in React is the process by which React updates the DOM with the changes made to the state or props of components. It is a key part of React's rendering optimization that ensures efficient updates and minimal manipulation of the actual DOM.

● What is React Fiber?
React Fiber is a complete rewrite of the React's core algorithm, introduced in React 16, designed to enhance the performance and capabilities of React. The primary goals of React Fiber are to improve perceived performance, enable new features, and make React more resilient in handling complex user interfaces.

● Why we need keys in React? When do we need keys in React?
Keys in React are essential for identifying elements uniquely in a list or a collection. They help React optimize the process of updating the DOM by distinguishing between different elements and knowing which ones have changed, been added, or been removed. This makes rendering more efficient and helps maintain the correct state and behavior of your components.

● Can we use index as keys in React?
Using indexes as keys in React is possible but generally not recommended, especially in certain situations. While using the index of an array as a key might work in some simple cases, it can lead to problems and inefficiencies in more complex applications.

● What is props in React? Ways
Props are arguments passed into React components, which are used to pass data and event handlers down the component tree. They allow for the customization and reuse of components.
